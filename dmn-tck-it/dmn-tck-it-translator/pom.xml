<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2016 Goldman Sachs.

    Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.

    You may obtain a copy of the License at
        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.goldmansachs.jdmn</groupId>
        <artifactId>jdmn-tck-integration-tests</artifactId>
        <version>4.2.1-SNAPSHOT</version>
    </parent>

    <artifactId>jdmn-tck-integration-tests-translator</artifactId>
	<name>jDMN: TCK Integration Tests Translator</name>
    <packaging>jar</packaging>

    <properties>
        <model.version>1.0</model.version>
        <platform.version>${project.parent.version}</platform.version>

        <generated.source.code.folder>${project.build.directory}/generated-sources/dmn</generated.source.code.folder>
        <generated.root.package>com.gs.dmn.generated</generated.root.package>
        <generated.test.code.folder>${project.build.directory}/generated-test-sources/tck</generated.test.code.folder>
        <generated.grpc.folder>${project.build.directory}/generated-sources/protobuf/grpc-java</generated.grpc.folder>
        <generated.protobuf.folder>${project.build.directory}/generated-sources/protobuf/java</generated.protobuf.folder>

        <line.coverage.minimum>0.00</line.coverage.minimum>
        <skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>  <!-- not deploying this module to Maven central -->
    </properties>

    <profiles>
        <profile>
            <id>jmh</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-jar</id>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <version>3.2.1</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <finalName>benchmarks</finalName>
                                    <transformers>
                                        <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                            <mainClass>org.openjdk.jmh.Main</mainClass>
                                        </transformer>
                                        <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                                    </transformers>
                                    <filters>
                                        <filter>
                                            <!--
                                                Shading signed JARs will fail without this.
                                                http://stackoverflow.com/questions/999489/invalid-signature-file-when-attempting-to-run-a-jar
                                            -->
                                            <artifact>*:*</artifact>
                                            <excludes>
                                                <exclude>META-INF/*.SF</exclude>
                                                <exclude>META-INF/*.DSA</exclude>
                                                <exclude>META-INF/*.RSA</exclude>
                                            </excludes>
                                        </filter>
                                    </filters>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.4.1.Final</version>
            </extension>
        </extensions>

        <plugins>
            <plugin>
                <groupId>com.goldmansachs.jdmn</groupId>
                <artifactId>jdmn-maven-plugin</artifactId>
                <version>${project.parent.version}</version>
                <configuration>
                    <dmnDialect>com.gs.dmn.dialect.StandardDMNDialectDefinition</dmnDialect>
                    <dmnTransformers>
                        <dmnTransformer>com.gs.dmn.transformation.ToQuotedNameTransformer</dmnTransformer>
                    </dmnTransformers>
                    <inputParameters>
                        <dmnVersion>${dmn.version}</dmnVersion>
                        <modelVersion>${model.version}</modelVersion>
                        <platformVersion>${platform.version}</platformVersion>
                        <xsdValidation>false</xsdValidation>
                        <caching>true</caching>
                    </inputParameters>
                </configuration>
                <executions>
                    <!-- tck cl2 -->
                    <execution>
                        <id>cl2-0001-input-data-string</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl2/0001-input-data-string/translator/0001-input-data-string.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0001_input_data_string</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl2-0001-input-data-string</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl2/0001-input-data-string/translator/0001-input-data-string-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl2/0001-input-data-string/translator/0001-input-data-string.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0001_input_data_string</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl2-0002-input-data-number</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl2/0002-input-data-number/translator/0002-input-data-number.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0002_input_data_number</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl2-0002-input-data-number.dmn</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl2/0002-input-data-number/translator/0002-input-data-number-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl2/0002-input-data-number/translator/0002-input-data-number.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0002_input_data_number</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl2-0003-input-data-string-allowed-values</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl2/0003-input-data-string-allowed-values/translator/0003-input-data-string-allowed-values.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0003_input_data_string_allowed_values</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl2-0003-input-data-string-allowed-values</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl2/0003-input-data-string-allowed-values/translator/0003-input-data-string-allowed-values-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl2/0003-input-data-string-allowed-values/translator/0003-input-data-string-allowed-values.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0003_input_data_string_allowed_values</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl2-0004-simpletable-U</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl2/0004-simpletable-U/translator/0004-simpletable-U.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0004_simpletable_U</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl2-0004-simpletable-U</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl2/0004-simpletable-U/translator/0004-simpletable-U-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl2/0004-simpletable-U/translator/0004-simpletable-U.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0004_simpletable_U</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl2-0005-simpletable-A</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl2/0005-simpletable-A/translator/0005-simpletable-A.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0005_simpletable_A</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl2-0005-simpletable-A</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl2/0005-simpletable-A/translator/0005-simpletable-A-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl2/0005-simpletable-A/translator/0005-simpletable-A.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0005_simpletable_A</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl2-0006-simpletable-P1</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl2/0006-simpletable-P1/translator/0006-simpletable-P1.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0006_simpletable_P1</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl2-0006-simpletable-P1</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl2/0006-simpletable-P1/translator/0006-simpletable-P1-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl2/0006-simpletable-P1/translator/0006-simpletable-P1.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0006_simpletable_P1</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl2-0007-simpletable-P2</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl2/0007-simpletable-P2/translator/0007-simpletable-P2.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0007_simpletable_P2</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl2-0007-simpletable-P2</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl2/0007-simpletable-P2/translator/0007-simpletable-P2-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl2/0007-simpletable-P2/translator/0007-simpletable-P2.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0007_simpletable_P2</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl2-0008-LX-arithmetic</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl2/0008-LX-arithmetic/translator/0008-LX-arithmetic.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0008_LX_arithmetic</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl2-0008-LX-arithmetic</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl2/0008-LX-arithmetic/translator/0008-LX-arithmetic-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl2/0008-LX-arithmetic/translator/0008-LX-arithmetic.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0008_LX_arithmetic</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl2-0009-invocation-arithmetic</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl2/0009-invocation-arithmetic/translator/0009-invocation-arithmetic.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0009_invocation_arithmetic</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl2-0009-invocation-arithmetic</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl2/0009-invocation-arithmetic/translator/0009-invocation-arithmetic-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl2/0009-invocation-arithmetic/translator/0009-invocation-arithmetic.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0009_invocation_arithmetic</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl2-0010-multi-output-U</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl2/0010-multi-output-U/translator/0010-multi-output-U.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0010_multi_output_U</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl2-0010-multi-output-U</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl2/0010-multi-output-U/translator/0010-multi-output-U-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl2/0010-multi-output-U/translator/0010-multi-output-U.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0010_multi_output_U</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl2-0100-feel-constants</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl2/0100-feel-constants/translator/0100-feel-constants.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0100_feel_constants</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl2-0100-feel-constants</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl2/0100-feel-constants/translator/0100-feel-constants-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl2/0100-feel-constants/translator/0100-feel-constants.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0100_feel_constants</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl2-0101-feel-constants</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl2/0101-feel-constants/translator/0101-feel-constants.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0101_feel_constants</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl2-0101-feel-constants</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl2/0101-feel-constants/translator/0101-feel-constants-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl2/0101-feel-constants/translator/0101-feel-constants.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0101_feel_constants</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl2-0102-feel-constants</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl2/0102-feel-constants/translator/0102-feel-constants.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0102_feel_constants</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl2-0102-feel-constants</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl2/0102-feel-constants/translator/0102-feel-constants-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl2/0102-feel-constants/translator/0102-feel-constants.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0102_feel_constants</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl2-0105-feel-math</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl2/0105-feel-math/translator/0105-feel-math.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0105_feel_math</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl2-0105-feel-math</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl2/0105-feel-math/translator/0105-feel-math-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl2/0105-feel-math/translator/0105-feel-math.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0105_feel_math</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl2-0106-feel-ternary-logic</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl2/0106-feel-ternary-logic/translator/0106-feel-ternary-logic.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0106_feel_ternary_logic</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl2-0106-feel-ternary-logic</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl2/0106-feel-ternary-logic/translator/0106-feel-ternary-logic-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl2/0106-feel-ternary-logic/translator/0106-feel-ternary-logic.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0106_feel_ternary_logic</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl2-0107-feel-ternary-logic-not</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl2/0107-feel-ternary-logic-not/translator/0107-feel-ternary-logic-not.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0107_feel_ternary_logic_not</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl2-0107-feel-ternary-logic-not</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl2/0107-feel-ternary-logic-not/translator/0107-feel-ternary-logic-not-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl2/0107-feel-ternary-logic-not/translator/0107-feel-ternary-logic-not.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl2_0107_feel_ternary_logic_not</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <!-- tck cl3 -->
                    <execution>
                        <id>cl3-0001-filter</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0001-filter/translator/0001-filter.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0001_filter</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-0001-filter</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0001-filter/translator/0001-filter-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0001-filter/translator/0001-filter.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0001_filter</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0002-string-functions</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0002-string-functions/translator/0002-string-functions.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0002_string_functions</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-0002-string-functions</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0002-string-functions/translator/0002-string-functions-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0002-string-functions/translator/0002-string-functions.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0002_string_functions</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0003-iteration.dmn</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0003-iteration/translator/0003-iteration.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0003_iteration</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-0003-iteration</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0003-iteration/translator/0003-iteration-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0003-iteration/translator/0003-iteration.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0003_iteration</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0004-lending-tree</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <templateProvider>com.gs.dmn.transformation.template.TreeTemplateProvider</templateProvider>
                            <lazyEvaluationDetectors>
                                <lazyEvaluatorDetector>com.gs.dmn.transformation.lazy.SparseDecisionDetector</lazyEvaluatorDetector>
                            </lazyEvaluationDetectors>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0004-lending/translator/0004-lending.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0004_lending_tree</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-0004-lending-tree</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <templateProvider>com.gs.dmn.transformation.template.TreeTemplateProvider</templateProvider>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0004-lending/translator/0004-lending-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0004-lending/translator/0004-lending.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0004_lending_tree</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0005-literal-invocation</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0005-literal-invocation/translator/0005-literal-invocation.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0005_literal_invocation</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-0005-literal-invocation</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0005-literal-invocation/translator/0005-literal-invocation-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0005-literal-invocation/translator/0005-literal-invocation.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0005_literal_invocation</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0006-join</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0006-join/translator/0006-join.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0006_join</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-0006-join</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0006-join/translator/0006-join-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0006-join/translator/0006-join.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0006_join</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0007-date-time</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0007-date-time/translator/0007-date-time.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0007_date_time</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-0007-date-time</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0007-date-time/translator/0007-date-time-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0007-date-time/translator/0007-date-time.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0007_date_time</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0008-listGen.dmn</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0008-listGen/translator/0008-listGen.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0008_listGen</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-0008-listGen</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0008-listGen/translator/0008-listGen-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0008-listGen/translator/0008-listGen.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0008_listGen</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0009-append-flatten</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0009-append-flatten/translator/0009-append-flatten.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0009_append_flatten</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-0009-append-flatten</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0009-append-flatten/translator/0009-append-flatten-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0009-append-flatten/translator/0009-append-flatten.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0009_append_flatten</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0010-concatenate</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0010-concatenate/translator/0010-concatenate.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0010_concatenate</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-0010-concatenate</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0010-concatenate/translator/0010-concatenate-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0010-concatenate/translator/0010-concatenate.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0010_concatenate</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0011-insert-remove</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0011-insert-remove/translator/0011-insert-remove.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0011_insert_remove</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-0011-insert-remove</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0011-insert-remove/translator/0011-insert-remove-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0011-insert-remove/translator/0011-insert-remove.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0011_insert_remove</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0012-list-functions</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0012-list-functions/translator/0012-list-functions.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0012_list_functions</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-0012-list-functions</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0012-list-functions/translator/0012-list-functions-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0012-list-functions/translator/0012-list-functions.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0012_list_functions</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0013-sort</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0013-sort/translator/0013-sort.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0013_sort</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-0013-sort</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0013-sort/translator/0013-sort-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0013-sort/translator/0013-sort.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0013_sort</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0014-loan-comparison</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0014-loan-comparison/translator/0014-loan-comparison.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0014_loan_comparison</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-0014-loan-comparison</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0014-loan-comparison/translator/0014-loan-comparison-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0014-loan-comparison/translator/0014-loan-comparison.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0014_loan_comparison</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0016-some-every</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0016-some-every/translator/0016-some-every.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0016_some_every</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-0016-some-every</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0016-some-every/translator/0016-some-every-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0016-some-every/translator/0016-some-every.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0016_some_every</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0017-tableTests</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0017-tableTests/translator/0017-tableTests.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0017_tableTests</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-0017-tableTests</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0017-tableTests/translator/0017-tableTests-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0017-tableTests/translator/0017-tableTests.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0017_tableTests</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0020-vacation-days</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0020-vacation-days/translator/0020-vacation-days.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0020_vacation_days</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-0020-vacation-days</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0020-vacation-days/translator/0020-vacation-days-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0020-vacation-days/translator/0020-vacation-days.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0020_vacation_days</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0021-singleton-list</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0021-singleton-list/translator/0021-singleton-list.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0021_singleton_list</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-0021-singleton-list</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0021-singleton-list/translator/0021-singleton-list-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0021-singleton-list/translator/0021-singleton-list.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0021_singleton_list</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0030-static-user-defined-functions</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0030-static-user-defined-functions/translator/0030-static-user-defined-functions.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0030_static_user_defined_functions</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-0030-static-user-defined-functions</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0030-static-user-defined-functions/translator/0030-static-user-defined-functions-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0030-static-user-defined-functions/translator/0030-static-user-defined-functions.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0030_static_user_defined_functions</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0031-static-user-defined-functions</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0031-static-user-defined-functions/translator/0031-static-user-defined-functions.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_static_0031_user_defined_functions</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-0031-static-user-defined-functions</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0031-static-user-defined-functions/translator/0031-static-user-defined-functions-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0031-static-user-defined-functions/translator/0031-static-user-defined-functions.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_static_0031_user_defined_functions</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0032-conditionals</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0032-conditionals/translator/0032-conditionals.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0032_conditionals</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-0032-conditionals</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0032-conditionals/translator/0032-conditionals-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0032-conditionals/translator/0032-conditionals.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0032_conditionals</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0033-for-loops</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0033-for-loops/translator/0033-for-loops.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0033_for_loops</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-0033-for-loops</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0033-for-loops/translator/0033-for-loops-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0033-for-loops/translator/0033-for-loops.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0033_for_loops</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-0076-feel-external-java</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.12.diagram.folder}/cl3/0076-feel-external-java/translator/0076-feel-external-java.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0076_feel_external_java</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-0076-feel-external-java</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.12.diagram.folder}/cl3/0076-feel-external-java/translator/0076-feel-external-java-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.12.diagram.folder}/cl3/0076-feel-external-java/translator/0076-feel-external-java.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_0076_feel_external_java</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-1100-feel-decimal-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/1100-feel-decimal-function/translator/1100-feel-decimal-function.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1100_feel_decimal_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-1100-feel-decimal-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/1100-feel-decimal-function/translator/1100-feel-decimal-function-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/1100-feel-decimal-function/translator/1100-feel-decimal-function.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1100_feel_decimal_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-1101-feel-floor-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/1101-feel-floor-function/translator/1101-feel-floor-function.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1101_feel_floor_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-1101-feel-floor-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/1101-feel-floor-function/translator/1101-feel-floor-function-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/1101-feel-floor-function/translator/1101-feel-floor-function.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1101_feel_floor_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-1102-feel-ceiling-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/1102-feel-ceiling-function/translator/1102-feel-ceiling-function.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1102_feel_ceiling_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-1102-FeelCeilingFunctionTest</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/1102-feel-ceiling-function/translator/1102-feel-ceiling-function-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/1102-feel-ceiling-function/translator/1102-feel-ceiling-function.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1102_feel_ceiling_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-1103-feel-substring-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/1103-feel-substring-function/translator/1103-feel-substring-function.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1103_feel_substring_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-1103-feel-substring-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/1103-feel-substring-function/translator/1103-feel-substring-function-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/1103-feel-substring-function/translator/1103-feel-substring-function.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1103_feel_substring_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-1104-feel-string-length-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/1104-feel-string-length-function/translator/1104-feel-string-length-function.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1104_feel_string_length_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-1104-feel-string-length-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/1104-feel-string-length-function/translator/1104-feel-string-length-function-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/1104-feel-string-length-function/translator/1104-feel-string-length-function.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1104_feel_string_length_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-1105-feel-upper-case-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/1105-feel-upper-case-function/translator/1105-feel-upper-case-function.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1105_feel_upper_case_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-1105-feel-upper-case-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/1105-feel-upper-case-function/translator/1105-feel-upper-case-function-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/1105-feel-upper-case-function/translator/1105-feel-upper-case-function.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1105_feel_upper_case_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-1106-feel-lower-case-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/1106-feel-lower-case-function/translator/1106-feel-lower-case-function.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1106_feel_lower_case_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-1106-feel-lower-case-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/1106-feel-lower-case-function/translator/1106-feel-lower-case-function-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/1106-feel-lower-case-function/translator/1106-feel-lower-case-function.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1106_feel_lower_case_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-1107-feel-substring-before-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/1107-feel-substring-before-function/translator/1107-feel-substring-before-function.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1107_feel_substring_before_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-1107-feel-substring-before-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/1107-feel-substring-before-function/translator/1107-feel-substring-before-function-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/1107-feel-substring-before-function/translator/1107-feel-substring-before-function.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1107_feel_substring_before_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-1108-feel-substring-after-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/1108-feel-substring-after-function/translator/1108-feel-substring-after-function.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1108_feel_substring_after_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-1108-feel-substring-after-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/1108-feel-substring-after-function/translator/1108-feel-substring-after-function-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/1108-feel-substring-after-function/translator/1108-feel-substring-after-function.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1108_feel_substring_after_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-1109-feel-replace-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/1109-feel-replace-function/translator/1109-feel-replace-function.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1109_feel_replace_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-1109-feel-replace-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/1109-feel-replace-function/translator/1109-feel-replace-function-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/1109-feel-replace-function/translator/1109-feel-replace-function.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1109_feel_replace_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-1110-feel-contains-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/1110-feel-contains-function/translator/1110-feel-contains-function.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1110_feel_contains_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-1110-feel-contains-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/1110-feel-contains-function/translator/1110-feel-contains-function-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/1110-feel-contains-function/translator/1110-feel-contains-function.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1110_feel_contains_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-1115-feel-date-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/1115-feel-date-function/translator/1115-feel-date-function.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1115_feel_date_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-1115-feel-date-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/1115-feel-date-function/translator/1115-feel-date-function-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/1115-feel-date-function/translator/1115-feel-date-function.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1115_feel_date_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-1116-feel-time-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/1116-feel-time-function/translator/1116-feel-time-function.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1116_feel_time_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-1116-feel-time-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/1116-feel-time-function/translator/1116-feel-time-function-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/1116-feel-time-function/translator/1116-feel-time-function.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1116_feel_time_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-1117-feel-date-and-time-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/1117-feel-date-and-time-function/translator/1117-feel-date-and-time-function.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1117_feel_date_and_time_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-1117-feel-date-and-time-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/1117-feel-date-and-time-function/translator/1117-feel-date-and-time-function-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/1117-feel-date-and-time-function/translator/1117-feel-date-and-time-function.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1117_feel_date_and_time_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-1120-feel-duration-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/1120-feel-duration-function/translator/1120-feel-duration-function.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1120_feel_duration_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-1120-feel-duration-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/1120-feel-duration-function/translator/1120-feel-duration-function-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/1120-feel-duration-function/translator/1120-feel-duration-function.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1120_feel_duration_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-1121-feel-years-and-months-duration-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/1121-feel-years-and-months-duration-function/translator/1121-feel-years-and-months-duration-function.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1121_feel_years_and_months_duration_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-1121-feel-years-and-months-duration-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/1121-feel-years-and-months-duration-function/translator/1121-feel-years-and-months-duration-function-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/1121-feel-years-and-months-duration-function/translator/1121-feel-years-and-months-duration-function.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_1121_feel_years_and_months_duration_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>cl3-9001-recursive-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/9001-recursive-function/translator/9001-recursive-function.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_9001_recursive_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-9001-recursive-function</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/9001-recursive-function/translator/9001-recursive-function-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/9001-recursive-function/translator/9001-recursive-function.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.tck.cl3_9001_recursive_function</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <!-- Composite models -->
                    <execution>
                        <id>composite-0001-no-name-conflicts-one-package</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${composite.12.diagram.folder}/0001-no-name-conflicts-one-package/translator</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0001_no_name_conflicts_one_package</javaRootPackage>
                                <onePackage>true</onePackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-composite-0001-no-name-conflicts-one-package</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${composite.12.diagram.folder}/0001-no-name-conflicts-one-package/translator</inputTestFileDirectory>
                            <inputModelFileDirectory>${composite.12.diagram.folder}/0001-no-name-conflicts-one-package/translator</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0001_no_name_conflicts_one_package</javaRootPackage>
                                <onePackage>true</onePackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>composite-0002-no-name-conflicts</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${composite.12.diagram.folder}/0002-no-name-conflicts/translator</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0002_no_name_conflicts</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-composite-0002-no-name-conflicts</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${composite.12.diagram.folder}/0002-no-name-conflicts/translator</inputTestFileDirectory>
                            <inputModelFileDirectory>${composite.12.diagram.folder}/0002-no-name-conflicts/translator</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0002_no_name_conflicts</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>composite-0003-name-conflicts</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${composite.12.diagram.folder}/0003-name-conflicts/translator</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0003_name_conflicts</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-composite-0003-name-conflicts</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${composite.12.diagram.folder}/0003-name-conflicts/translator</inputTestFileDirectory>
                            <inputModelFileDirectory>${composite.12.diagram.folder}/0003-name-conflicts/translator</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0003_name_conflicts</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>composite-0004-decision-tables-one-package</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${composite.12.diagram.folder}/0004-decision-tables/translator</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0004_decision_tables_one_package</javaRootPackage>
                                <onePackage>true</onePackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-composite-0004-decision-tables-one-package</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${composite.12.diagram.folder}/0004-decision-tables/translator</inputTestFileDirectory>
                            <inputModelFileDirectory>${composite.12.diagram.folder}/0004-decision-tables/translator</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0004_decision_tables_one_package</javaRootPackage>
                                <onePackage>true</onePackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>composite-0004-decision-tables</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${composite.12.diagram.folder}/0004-decision-tables/translator</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0004_decision_tables</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-composite-0004-decision-tables</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${composite.12.diagram.folder}/0004-decision-tables/translator</inputTestFileDirectory>
                            <inputModelFileDirectory>${composite.12.diagram.folder}/0004-decision-tables/translator</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0004_decision_tables</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>composite-0005-decision-tables-name-conflicts</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${composite.12.diagram.folder}/0005-decision-tables-name-conflicts/translator</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0005_decision_tables_name_conflicts</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-composite-0005-decision-tables-name-conflicts</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${composite.12.diagram.folder}/0005-decision-tables-name-conflicts/translator</inputTestFileDirectory>
                            <inputModelFileDirectory>${composite.12.diagram.folder}/0005-decision-tables-name-conflicts/translator</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0005_decision_tables_name_conflicts</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>composite-0006-multiple-input-data</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${composite.12.diagram.folder}/0006-multiple-input-data/translator</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0006_multiple_input_data</javaRootPackage>
                                <singletonInputData>false</singletonInputData>
                                <caching>false</caching>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-composite-0006-multiple-input-data</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${composite.12.diagram.folder}/0006-multiple-input-data/translator</inputTestFileDirectory>
                            <inputModelFileDirectory>${composite.12.diagram.folder}/0006-multiple-input-data/translator</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0006_multiple_input_data</javaRootPackage>
                                <singletonInputData>false</singletonInputData>
                                <caching>false</caching>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>composite-0007-name-conflicts-same-decision-singleton</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${composite.12.diagram.folder}/0007-name-conflicts-same-decision-singleton/translator</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0007_name_conflicts_same_decision_singleton</javaRootPackage>
                                <caching>false</caching>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-composite-0007-name-conflicts-same-decision-singleton</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${composite.12.diagram.folder}/0007-name-conflicts-same-decision-singleton/translator</inputTestFileDirectory>
                            <inputModelFileDirectory>${composite.12.diagram.folder}/0007-name-conflicts-same-decision-singleton/translator</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0007_name_conflicts_same_decision_singleton</javaRootPackage>
                                <caching>false</caching>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>composite-0008-name-conflicts-same-decision-no-singleton</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${composite.12.diagram.folder}/0008-name-conflicts-same-decision-no-singleton/translator</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0008_name_conflicts_same_decision_no_singleton</javaRootPackage>
                                <singletonInputData>false</singletonInputData>
                                <caching>false</caching>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-composite-0008-name-conflicts-same-decision-no-singleton</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${composite.12.diagram.folder}/0008-name-conflicts-same-decision-no-singleton/translator</inputTestFileDirectory>
                            <inputModelFileDirectory>${composite.12.diagram.folder}/0008-name-conflicts-same-decision-no-singleton/translator</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0008_name_conflicts_same_decision_no_singleton</javaRootPackage>
                                <singletonInputData>false</singletonInputData>
                                <caching>false</caching>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>lazy-composite-0008-name-conflicts-same-decision-no-singleton</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${composite.12.diagram.folder}/0008-name-conflicts-same-decision-no-singleton/translator</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <lazyEvaluationDetectors>
                                <lazyEvaluatorDetector>com.gs.dmn.transformation.lazy.SparseDecisionDetector</lazyEvaluatorDetector>
                            </lazyEvaluationDetectors>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.lazy_composite_0008_name_conflicts_same_decision_no_singleton</javaRootPackage>
                                <singletonInputData>false</singletonInputData>
                                <caching>false</caching>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-lazy-composite-0008-name-conflicts-same-decision-no-singleton</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${composite.12.diagram.folder}/0008-name-conflicts-same-decision-no-singleton/translator</inputTestFileDirectory>
                            <inputModelFileDirectory>${composite.12.diagram.folder}/0008-name-conflicts-same-decision-no-singleton/translator</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <lazyEvaluationDetectors>
                                <lazyEvaluatorDetector>com.gs.dmn.transformation.lazy.SparseDecisionDetector</lazyEvaluatorDetector>
                            </lazyEvaluationDetectors>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.lazy_composite_0008_name_conflicts_same_decision_no_singleton</javaRootPackage>
                                <singletonInputData>false</singletonInputData>
                                <caching>false</caching>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>composite-0009-type-name-conflicts</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${composite.12.diagram.folder}/0009-type-name-conflicts/translator</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0009_type_name_conflicts</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-0009-type-name-conflicts</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${composite.12.diagram.folder}/0009-type-name-conflicts/translator</inputTestFileDirectory>
                            <inputModelFileDirectory>${composite.12.diagram.folder}/0009-type-name-conflicts/translator</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0009_type_name_conflicts</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>composite-0010-bkm-name-conflicts</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${composite.12.diagram.folder}/0010-bkm-name-conflicts/translator</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0010_bkm_name_conflicts</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-0010-bkm-name-conflicts</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${composite.12.diagram.folder}/0010-bkm-name-conflicts/translator</inputTestFileDirectory>
                            <inputModelFileDirectory>${composite.12.diagram.folder}/0010-bkm-name-conflicts/translator</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.composite_0010_bkm_name_conflicts</javaRootPackage>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <!-- gRPC models -->
                    <execution>
                        <id>cl3-0004-lending-proto-cache</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <lazyEvaluationDetectors>
                                <lazyEvaluatorDetector>com.gs.dmn.transformation.lazy.SparseDecisionDetector</lazyEvaluatorDetector>
                            </lazyEvaluationDetectors>
                            <inputFileDirectory>${tck.11.diagram.folder}/cl3/0004-lending/translator/0004-lending.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.proto.cl3_0004_lending_proto_cache</javaRootPackage>
                                <generateProtoMessages>true</generateProtoMessages>
                                <generateProtoServices>true</generateProtoServices>
                                <protoVersion>proto3</protoVersion>
                                <caching>true</caching>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-cl3-0004-lending-proto-cache</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${tck.11.diagram.folder}/cl3/0004-lending/translator/0004-lending-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${tck.11.diagram.folder}/cl3/0004-lending/translator/0004-lending.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.proto.cl3_0004_lending_proto_cache</javaRootPackage>
                                <generateProtoMessages>true</generateProtoMessages>
                                <generateProtoServices>true</generateProtoServices>
                                <protoVersion>proto3</protoVersion>
                                <caching>true</caching>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <execution>
                        <id>date-time-proto</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>dmn-to-java</goal>
                        </goals>
                        <configuration>
                            <inputFileDirectory>${proto.11.diagram.folder}/date-time-proto/translator/date-time-proto.dmn</inputFileDirectory>
                            <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.proto.date_time_proto</javaRootPackage>
                                <generateProtoMessages>true</generateProtoMessages>
                                <generateProtoServices>true</generateProtoServices>
                                <protoVersion>proto3</protoVersion>
                                <caching>true</caching>
                            </inputParameters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-date-time-proto</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>tck-to-java</goal>
                        </goals>
                        <configuration>
                            <inputTestFileDirectory>${proto.11.diagram.folder}/date-time-proto/translator/date-time-proto-test-01.xml</inputTestFileDirectory>
                            <inputModelFileDirectory>${proto.11.diagram.folder}/date-time-proto/translator/date-time-proto.dmn</inputModelFileDirectory>
                            <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                            <inputParameters>
                                <javaRootPackage>${generated.root.package}.proto.date_time_proto</javaRootPackage>
                                <generateProtoMessages>true</generateProtoMessages>
                                <generateProtoServices>true</generateProtoServices>
                                <protoVersion>proto3</protoVersion>
                                <caching>true</caching>
                            </inputParameters>
                        </configuration>
                    </execution>

                    <!-- non-compliant-->
                    <!--
                                        <execution>
                                            <id>nc-0015-all-any</id>
                                            <phase>generate-sources</phase>
                                            <goals>
                                                <goal>dmn-to-java</goal>
                                            </goals>
                                            <configuration>
                                                <inputFileDirectory>${tck.11.diagram.folder}/nc/0015-all-any.dmn</inputFileDirectory>
                                                <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                                                <inputParameters>
                                                    <javaRootPackage>${generated.root.package}.tck.nc_0015_all_any</javaRootPackage>
                                                </inputParameters>
                                            </configuration>
                                        </execution>
                                        <execution>
                                            <id>test-nc-0015-all-any</id>
                                            <phase>generate-sources</phase>
                                            <goals>
                                                <goal>tck-to-java</goal>
                                            </goals>
                                            <configuration>
                                                <inputTestFileDirectory>${tck.11.diagram.folder}/nc/0015-all-any-test-01.xml</inputTestFileDirectory>
                                                <inputModelFileDirectory>${tck.11.diagram.folder}/nc/0015-all-any.dmn</inputModelFileDirectory>
                                                <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                                                <inputParameters>
                                                    <javaRootPackage>${generated.root.package}.tck.nc_0015_all_any</javaRootPackage>
                                                </inputParameters>
                                            </configuration>
                                        </execution>

                                        <execution>
                                            <id>nc-0019-flight-rebooking</id>
                                            <phase>generate-sources</phase>
                                            <goals>
                                                <goal>dmn-to-java</goal>
                                            </goals>
                                            <configuration>
                                                <inputFileDirectory>${tck.11.diagram.folder}/nc/0019-flight-rebooking.dmn</inputFileDirectory>
                                                <outputFileDirectory>${generated.source.code.folder}</outputFileDirectory>
                                                <inputParameters>
                                                    <javaRootPackage>${generated.root.package}.tck.nc_0019_flight_rebooking</javaRootPackage>
                                                </inputParameters>
                                            </configuration>
                                        </execution>
                                        <execution>
                                            <id>test-nc-0019-flight-rebooking</id>
                                            <phase>generate-sources</phase>
                                            <goals>
                                                <goal>tck-to-java</goal>
                                            </goals>
                                            <configuration>
                                                <inputTestFileDirectory>${tck.11.diagram.folder}/nc/0019-flight-rebooking-test-01.xml</inputTestFileDirectory>
                                                <inputModelFileDirectory>${tck.11.diagram.folder}/nc/0019-flight-rebooking.dmn</inputModelFileDirectory>
                                                <outputFileDirectory>${generated.test.code.folder}</outputFileDirectory>
                                                <inputParameters>
                                                    <javaRootPackage>${generated.root.package}.tck.nc_0019_flight_rebooking</javaRootPackage>
                                                </inputParameters>
                                            </configuration>
                                        </execution>
                    -->

                </executions>
            </plugin>

            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.6.1</version>
                <configuration>
                    <protocArtifact>com.google.protobuf:protoc:${google.protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
                    <pluginId>grpc-java</pluginId>
                    <pluginArtifact>io.grpc:protoc-gen-grpc-java:${io.grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
                    <protoSourceRoot>${generated.source.code.folder}/com/gs/dmn/generated/</protoSourceRoot>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compile-custom</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-generated-classes-to-classpath</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${generated.source.code.folder}</source>
                                <source>${generated.protobuf.folder}</source>
                                <source>${generated.grpc.folder}</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-generated-resources-to-classpath</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>add-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${generated.source.code.folder}</directory>
                                    <excludes>
                                        <exclude>**/*.java</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-generated-test-classes-to-classpath</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${generated.test.code.folder}</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-generated-test-resources-to-classpath</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${generated.test.code.folder}</directory>
                                    <excludes>
                                        <exclude>**/*.java</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>

            <!-- Do not create jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-jar</id>
                        <phase />
                    </execution>
                </executions>
            </plugin>

            <!-- Do not create sources -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <skipSource>true</skipSource>
                </configuration>
            </plugin>

            <!-- Do not create javadocs -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!-- Do not sign module -->
            <plugin>
                <artifactId>maven-gpg-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!-- Do not install module -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!-- Do not deploy module -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>